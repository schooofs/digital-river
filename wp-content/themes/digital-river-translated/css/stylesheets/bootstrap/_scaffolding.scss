//
// Scaffolding
// --------------------------------------------------


// Reset the box-sizing
//
// Heads up! This reset may cause conflicts with some third-party widgets.
// For recommendations on resolving such conflicts, see
// http://getbootstrap.com/getting-started/#third-box-sizing
* {
  @include box-sizing(border-box);
}
*:before,
*:after {
  @include box-sizing(border-box);
}


// Body reset

html {
  font-size: 10px;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}

body {
  font-family: $font-family-base;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $text-color;
  background-color: $body-bg;
}

// Reset fonts for relevant elements
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}


// Links

a {
  color: $link-color;
  text-decoration: none;

  &:hover,
  &:focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus {
    @include tab-focus;
  }
}


/* Arrow Links 
***********************************************/
.arrow {
    position:relative;
    display:inline-block;
    text-decoration:none;
    font-family: $arial;
    &:hover {
      text-decoration:none !important;
    }
    &:after {
      margin-top:1px;
      margin-left:5px;
      content:"\203A";
      transform:translateX(-20px);
      display:inline-block;
      opacity:0;
      transition:transform 0.3s ease 0s, opacity 0.2s ease 0s;
    }
    &:before {
      display:inline-block;
      opacity:0;
      transition:transform 0.3s ease 0s, opacity 0.2s ease 0s;
    }
    &:hover, &:focus {
        &:after{
            opacity:1;
            transform:translateX(0px);
        }
    }
}


/* Bracket Links - will work with any font size
***********************************************/
.brackets {
    position:relative;
    &:before,
    &:after {
        transition:all 100ms ease-in-out;
        position:absolute;
    }
    &:before {
        content:'[ ';
        left:10%;
        opacity:0;
    }
    &:after {
        content:' ]';
        right:10%;
        opacity:0;
    }
    &:hover {
        text-decoration:none;
    }
    &:hover:before,
    &:hover:after {
    }
    &:hover:before {
        left:-7%;
        opacity:1;
    }
    &:hover:after {
        right:-7%;
        opacity:1;
    }
}

.eyebrow,
.green-under-line{
    margin: 30px 0px 20px;
    padding: 0px 2px;
    font-family: $med;
    color: $black;
    text-transform: uppercase;
    font-size: 1.2em;
    border-bottom: 6px solid $green;
    display: inline-block;
    line-height: 1;

    &.option{
        &.no-margin{
           margin:0;
        }
    }
}




.slide{
  padding:30px 0;

  &.map-bg{
      background-image:url("../../payments/map.png");
      background-size:cover;
  }

  &.option{

    &.top-zero{
      padding-top:0;
    }
    &.bottom-zero{
      padding-bottom:0;
    }
    &.top-plus{
      padding-top: 45px;
    }
    &.bottom-plus{
      padding-bottom: 45px;
    }
    &.bottom-double{
      padding-bottom: 60px;
    }
    &.top-double{
      padding-top: 60px;
    }
  }
}


// Figures
//
// We reset this here because previously Normalize had no `figure` margins. This
// ensures we don't break anyone's use of the element.

figure {
  margin: 0;
}


// Images

img {
  vertical-align: middle;
}

// Responsive images (ensure images don't scale beyond their parents)
.img-responsive {
  @include img-responsive;
}

// Rounded corners
.img-rounded {
  border-radius: $border-radius-large;
}

// Image thumbnails
//
// Heads up! This is mixin-ed into thumbnails.less for `.thumbnail`.
.img-thumbnail {
  padding: $thumbnail-padding;
  line-height: $line-height-base;
  background-color: $thumbnail-bg;
  border: 1px solid $thumbnail-border;
  border-radius: $thumbnail-border-radius;
  @include transition(all .2s ease-in-out);

  // Keep them at most 100% wide
  @include img-responsive(inline-block);
}

// Perfect circle
.img-circle {
  border-radius: 50%; // set radius in percents
}


// Horizontal rules

hr {
  margin-top:    $line-height-computed;
  margin-bottom: $line-height-computed;
  border: 0;
  border-top: 1px solid $hr-border;
}


// Only display content to screen readers
//
// See: http://a11yproject.com/posts/how-to-hide-content/

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

// Use in conjunction with .sr-only to only display content when it's focused.
// Useful for "Skip to main content" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
// Credit: HTML5 Boilerplate

.sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto;
  }
}


// iOS "clickable elements" fix for role="button"
//
// Fixes "clickability" issue (and more generally, the firing of events such as focus as well)
// for traditionally non-focusable elements with role="button"
// see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile

[role="button"] {
  cursor: pointer;
}

.row-eq-height {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}